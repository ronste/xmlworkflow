_pandoc-help:
  #!/bin/bash
  cat << EOF
  This conversion step uses Pandoc (version `pandoc --version | grep -Po "\d+\.\d+\.\d+\.\d+"`) to perform a docx -> XML conversion step.

  It uses the Pandoc extensions docx, styles and citations, the metadata.yaml file located in the metadata subfolder of the current working directory and a basic jats_template.tex template derived from the default Pandoc Jats template.
  It also applies a custom lua writer to extract author metadata from the docx document.

  Relevant links:
  https://pandoc.org/

  EOF
  
# Convert docx to Jats XML using Pandoc.
pandoc: (pandoc- xml-mode)

# Convert docx to Bits XML using Pandoc (experimental, metadata not yet supported).
pandoc-bits: (pandoc- "bits")

[no-cd, private]
pandoc- xml-mode=xml-mode: _default
  #!/usr/bin/env bash
  set -euo pipefail
  source ~/.bashrc
  echo -e "{{hcs}}Converting docx to XML with Pandoc ...{{nc}}"
  echo -e 'Using template file {{ if xml-mode == "bits" { "bits_template.tex" } else { "jats_template.tex" } }}'
  pandoc {{ if debug == "true" { "--verbose" } else { "" } }} $WORK_PATH/{{docx-file}} -s \
    -f docx+styles+citations \
    --extract-media="." \
    --metadata-file="$METADATA_PATH/metadata.yaml" \
    --citeproc \
    --template $UTILS_PATH/{{ if xml-mode == "bits" { "bits_template.tex" } else { "jats_template.tex" } }} \
    -t "$UTILS_PATH/custom_jats_writer.lua" \
    -o "$WORK_PATH/{{docx-file}}_Pandoc.xml"
  cp {{ if debug == "true" { "--verbose" } else { "" } }} "$WORK_PATH/{{docx-file}}_Pandoc.xml" "$WORK_PATH/{{buffer-xml-file}}"
  cp {{ if debug == "true" { "--verbose" } else { "" } }} $RES_PATH/logo/* $WORK_PATH/media
  echo "Elapsed Time: $SECONDS seconds"

# Generate PDF using Pandoc
[no-cd, private]
pandoc-pdf- pandoc_from=pandoc_from: _default
  #!/usr/bin/env bash
  set -euo pipefail
  source ~/.bashrc
  echo -e "{{hcs}}Converting {{pandoc_from}} to PDF with Pandoc ...{{nc}}"
  pandoc "$WORK_PATH/buffer.{{pandoc_from}}" -s \
    -f {{ if pandoc_from == "html" { "html" } else { "jats" } }} \
    --pdf-engine=pdflatex \
    --template="$DEFAULT_TEMPLATE_PATH/pdf_template_pandoc.tex" \
    --metadata-file="$METADATA_PATH/metadata.yaml" \
    -t pdf \
    -o "$WORK_PATH/{{docx-file}}_Pandoc.pdf"
  echo "Elapsed Time: $SECONDS seconds"

# Generate PDF from HTML using Pandoc
pandoc-pdf-html: _default html (pandoc-pdf- pandoc_from)

[private]
pandoc-pdf-html-: _default (pandoc-pdf- pandoc_from)

# Generate PDF from XML using Pandoc
pandoc-pdf-xml: _default xml (pandoc-pdf- "XML")

[private]
pandoc-pdf-xml-: _default (pandoc-pdf- "XML")